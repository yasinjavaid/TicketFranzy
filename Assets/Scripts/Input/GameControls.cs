//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/GameControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameControls"",
    ""maps"": [
        {
            ""name"": ""WorldCharacter"",
            ""id"": ""d7937131-61ca-4692-904f-f599482eb039"",
            ""actions"": [
                {
                    ""name"": ""CharacterMove"",
                    ""type"": ""Value"",
                    ""id"": ""0964a177-181b-4c1d-aea7-cb4c85b1204b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""cb4b6d4e-13e0-405e-be6a-34ce9e362682"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""2816a1a8-781c-4e14-a2af-1723c96717ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""b1f4e5b9-498a-4ad0-9cb7-ec356a1ac7cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CharacterRun"",
                    ""type"": ""Button"",
                    ""id"": ""1ea66d4b-7a31-4940-b374-7cd38b7a8ef1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""317d5c04-e567-43a7-9579-5f99c6c9fb68"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2,StickDeadzone"",
                    ""groups"": ""Switch"",
                    ""action"": ""CharacterMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""35f6fce3-72e8-41b2-acd3-87daf576c3a0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CharacterMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d8d4344b-a765-4dec-8a31-66b0b18d0fa2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CharacterMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2b1a5de0-f0ed-4c83-bad9-b5ce735997d0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CharacterMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""28bde0fa-e418-4d89-bfe5-805643e06476"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CharacterMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b6dd83e5-b7ad-42e7-b737-3a0616f8b8d6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CharacterMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""31ac02ed-d783-4be7-ab7d-0362e132a8fd"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59f11502-6724-43ed-aab1-7e145180e772"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e9d0f2a-9347-4a63-a2ae-67a1ef844f41"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dee42877-df29-4726-ac11-cc8ff6c144e1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4644589f-0fc5-429b-99b4-e402b1a07033"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd6027c8-2696-4623-be1c-424c3a38ca93"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""294a6cec-f48e-491e-b767-b839ce841bc8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a9e5376-3ec7-428a-9370-fdecc0774acb"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CharacterRun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PizzaRoll"",
            ""id"": ""0d4b1bd6-c8c7-4e3f-acb7-434cf738a623"",
            ""actions"": [
                {
                    ""name"": ""MoveReticle"",
                    ""type"": ""Value"",
                    ""id"": ""fd267c0d-ed21-4e01-b2af-28742407e7fb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LaunchBall"",
                    ""type"": ""Value"",
                    ""id"": ""c9000a69-acb5-4d5f-bc53-6a495604f183"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pointer"",
                    ""type"": ""Value"",
                    ""id"": ""cb030286-8c0a-4d82-b13b-53ed72011425"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HoldBall"",
                    ""type"": ""Button"",
                    ""id"": ""b5bda666-ce96-4c52-8784-8ad8d3972447"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3e58b513-5e2d-48dd-8254-49c528afe85d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""ccba2291-4c8f-428f-9ac7-0a341ec60022"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cff8a900-4b96-4c4a-a2f3-56a3ae74fd6a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""MoveReticle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9518ce7-33ca-4564-823d-473ede3d5ec9"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""LaunchBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ead55573-9c42-44ba-a949-8954d4f0eab7"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""HoldBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7606917a-4d46-4b18-8b10-6e79b65e0909"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""HoldBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4691d24-6b75-4951-b539-26be189958ce"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""HoldBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5e004e7-1a11-4fe7-abde-25c4b9d377c6"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Pointer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e20b3ce5-88bc-443c-ae65-ae511a7b387c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a51af7d-4c77-4217-bff5-dad7fa897635"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19c650db-b918-4ccb-8b23-d08b60daaad6"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Titlescreen"",
            ""id"": ""bcdacaa4-7401-437b-aafd-025c46eb8296"",
            ""actions"": [
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""15560f78-a74f-4c91-afbc-4e7888dce7b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""25ca3272-26ad-4e72-99e4-0a00b6114664"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb87f8e0-26b0-46bb-b4e3-e67bfd753b92"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04dfa239-f1c1-4c1d-a48f-5330c122c93c"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Connect4Hoops"",
            ""id"": ""5fefbc46-48e6-454f-b426-47833d9b8217"",
            ""actions"": [
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""b1015348-6053-4bd3-9f2a-becd8e18296d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b7fc1cd5-91a4-41bb-bffb-bd4f3412f396"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(pressPoint=0.2,behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""HotShot"",
            ""id"": ""c4122990-67b5-46b3-8121-8208e1385731"",
            ""actions"": [
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""412a8009-9229-4f51-953d-76a2a4721bc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""68c0df0b-c64b-41f2-8ac1-6f686ded506b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""6e372e96-d4b8-420a-b9d9-7510de39415b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugConsole"",
                    ""type"": ""Button"",
                    ""id"": ""0817968b-efbd-4bb4-a88f-37577676ffbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""580add74-ccf0-4a68-a27e-6424663e959e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""c8aaf413-1f2a-404c-9aa7-5de289ee9014"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""d70c26d6-6775-462d-bbe9-8c6e3d21559f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""c17d7204-2042-4b6b-9c31-7daffb7497e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""00c0f68f-4c32-4cf4-b958-f368236f9446"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": ""Press(pressPoint=0.5)"",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d96d6882-0dad-467a-ae2d-e606ec1ad757"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cca871c-07a3-4329-86c7-c27e7e8b8255"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0adebb4-ae5e-4958-9587-47f622d19be7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c569bba1-02b6-4503-9044-c004c2ee997a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5c85585-3550-4c47-b24a-56938a9c1b05"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""769d0c87-e8e2-444a-b063-fb97d8dbdb29"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DebugConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5cb0407-5179-43cf-9159-d94e05ede67f"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de289810-cb63-4aa3-83da-b180aee1a41e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c260a77d-ad2e-4183-b42f-94b9e41e33d8"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71aded0f-ed66-49e2-b81d-10cec3ce58f3"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82220350-0cab-4464-9ce6-0157da12c179"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cd48277-c4dc-4fea-ae7a-db123682063d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b3df868-5d88-4fd6-ad32-41189c149892"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc56c689-488c-45c3-8c59-192f1c09607e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""WillyCrash"",
            ""id"": ""1880eb90-6c0e-479a-8d20-10a095cd1474"",
            ""actions"": [
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""856c9943-da72-4c56-a022-b42fed2af698"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""186d2b3c-f32c-4e4e-8996-c6fec7f5f857"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""49d29cd6-7bfb-424d-a8ae-aed9504d7cdb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugConsole"",
                    ""type"": ""Button"",
                    ""id"": ""9f2503e1-f3b4-4c55-b775-23af182f7f5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""6fe9a314-2ede-494e-9e6d-8d07f89fedec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Launch"",
                    ""type"": ""Button"",
                    ""id"": ""969106cc-17e0-4e71-a95c-0a8b69f03445"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""541624f9-769d-4960-aa00-f4454cfe9072"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": ""Press(pressPoint=0.5)"",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""947709a2-e7c8-419d-bc2c-9ffe4eebf335"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""511c93c4-6244-4ab3-8dd6-1adc663e54c4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""245443f7-2af7-4ed0-85db-2c44c19ccb7f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""609697f2-e144-449a-bd9f-7f51722caa3d"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DebugConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7850d81f-d775-4f7f-b61f-57812d21bc8a"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef88aea9-6aec-41a0-ae6b-4b0968bb02f1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Launch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PianoKeys"",
            ""id"": ""7639e687-05f1-4327-9b0b-c9117504aecb"",
            ""actions"": [
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""79aa9992-f03d-4771-b8c0-8fcf9610d359"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""ff444bbc-01e2-497d-8da6-bddd06b33912"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugConsole"",
                    ""type"": ""Button"",
                    ""id"": ""8f224c41-ea19-4067-863e-0800fda1ee84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""5e76f7c0-b367-404a-838e-8d55a2ee9bc4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""1a711450-8085-4fe0-a9d8-02d42224070e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileA"",
                    ""type"": ""Button"",
                    ""id"": ""42cb9acb-7228-4333-a54a-2cc218956cb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileB"",
                    ""type"": ""Button"",
                    ""id"": ""985f0105-2315-4eee-a662-c1494d9797fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileC"",
                    ""type"": ""Button"",
                    ""id"": ""041e4d5d-768b-4fb5-bd57-587edb850171"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileD"",
                    ""type"": ""Button"",
                    ""id"": ""70dbd846-1e15-4392-8394-decfca9db456"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""814e156f-c668-496a-93f2-e7579c9ef6a8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": ""Hold(duration=0.2,pressPoint=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f6cb601-b0f3-4467-9daf-29084bec9c15"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""TileA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3084045-e0c8-45ff-9bc5-717668dd703d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": ""Hold(duration=0.4,pressPoint=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d405eaf1-6b45-4d94-84e2-5a962fdfc7f0"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f89f82f-fcb8-49df-a5c3-9fa9204e287c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": ""Hold(duration=0.2,pressPoint=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11372ab0-11e8-4aa4-90cd-492e772fb1bd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe50f4d9-9946-4736-9575-85a98e251001"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": ""Hold(duration=0.2,pressPoint=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a15ebf3-c584-444f-bb06-a23209fafb68"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b3eae92-b4e5-4b59-b191-4c11b63c2af3"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbcc4e92-2713-4876-8585-fb9dc450cd15"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1602c4b6-61d6-4e51-b002-3c73ea49cbcd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c60514e-a3bd-4be0-a397-1dcddfe2e3f7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8a0283a-657b-44c7-ac04-2fcaf5324ca3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40c470a7-2887-45c1-abf2-ace4401c84c0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd90e454-597d-4bb4-adb6-b2ed77f08039"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DebugConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0cbea9c-65f1-450c-b4d7-d173e350dda5"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""FullTilt"",
            ""id"": ""033bd85d-f2d0-40f0-99b0-f5e0e18de19b"",
            ""actions"": [
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""20fa89ec-40f6-4daa-a7c0-c8a0adef0292"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugConsole"",
                    ""type"": ""Button"",
                    ""id"": ""8761ea95-0c2a-4a8d-8f4f-d541eebea5d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""45e7f37c-b8bf-4e05-a0e9-272d3237042b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""ea64ae13-c028-4e9d-9a0f-a5f911a2c5a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""1c66a9e0-123d-4ebc-87d0-2986cc565364"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardWheel"",
                    ""type"": ""Value"",
                    ""id"": ""2151df68-575e-4ca7-b07f-01d246ace713"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ReleaseBallKey"",
                    ""type"": ""Button"",
                    ""id"": ""9170396c-4256-477f-bee6-d512586fed40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ed224605-d056-42e0-b639-0ccf027e8f9c"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dccbe73a-c04c-4219-a584-a36b055d38bf"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e0ea4dd-7ab5-49d0-957b-bde45c2cde8c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6304968-13e6-4fc1-aaea-42010e85f936"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c78fca6d-6364-4ba6-93ce-ad13863bf5c5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardWheel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""aeabfaa6-6052-41c4-a08a-e16a5f554a84"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5cdcc892-d69a-4eea-8ab6-707bd527efc9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""216ebd42-0b68-4508-b05c-d80c75da91ff"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReleaseBallKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b57515a0-9829-4041-a2c4-aac98764882a"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6aff18b9-4389-4266-b6d4-23562cec60f3"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DebugConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""QuickDrop"",
            ""id"": ""d7e16f82-214a-49d3-8cae-3b107489c3db"",
            ""actions"": [
                {
                    ""name"": ""BallDrop"",
                    ""type"": ""Button"",
                    ""id"": ""0b9c5f8c-f06a-42bc-8608-d7ee4d3222f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""3c2c09d7-04ea-407d-9d10-dc6c28e16a07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""070874dc-6f30-4fbe-94e3-157cefba36de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""7ac7fbf0-228c-44de-b833-9439f7e59c56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugConsole"",
                    ""type"": ""Button"",
                    ""id"": ""6f261746-f4e4-451e-9629-82d674b03e0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""80c69135-2e47-4077-872f-03e2697197fb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BallDrop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6437fbce-317c-491e-8e7a-b024263f6de7"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DebugConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90982b8e-566c-4892-b0ed-ff14026ef1ef"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fc1befa-1e29-40f7-8e2b-90c81136207e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""589b1c6e-a3ce-44b7-a851-7166482d51d9"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0184b320-1305-4622-8a3b-c17122e284a0"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Squiggle"",
            ""id"": ""2379f963-cb0d-4c7a-aba7-316eff87a64e"",
            ""actions"": [
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""232162ed-6ba1-452b-ae79-40aec4a8c263"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HoldBall"",
                    ""type"": ""Button"",
                    ""id"": ""6f58ec2d-1c60-4a0b-bb6e-252486b26371"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b202bada-cfbd-47b0-9637-3acdecbe444e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugConsole"",
                    ""type"": ""Button"",
                    ""id"": ""794cc2b3-8c20-42b3-80b3-b9515696ade5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""ded0095d-0d35-4924-828c-e53e5e6a7d65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""c99d770c-e4f7-477b-95c1-cd9722d77ce7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionButton"",
                    ""type"": ""Button"",
                    ""id"": ""99d3466e-0a51-4027-b70c-f663a00f23f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1546a38b-c226-4f93-8272-4a698ce78f48"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c189595-f851-427c-b07a-c2ea94eb215d"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fbb83a5-bc79-4e06-b6ab-28c6166f5816"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""DebugConsole"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6482bd8e-6c35-4719-9fb0-f2f46591cb06"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63c7fdf1-6dab-449f-ac3b-4f5a40eb3268"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d13c629a-9ea2-4ce9-8290-ad8fc01925ef"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2c35a3f-35fb-4f62-8b01-02930b513435"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""625f3141-4807-4076-9712-34c4a332f499"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91c2e964-e433-4e6c-8e2a-59e70be22099"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Switch"",
                    ""action"": ""HoldBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75dc7d12-28ee-4ff5-bc3a-c4b096bad02f"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""HoldBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b51fd67b-fa8a-4e16-be68-5967d37395c0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""HoldBall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69802abc-7f51-4c11-bf10-9dd7228ace13"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Switch"",
            ""bindingGroup"": ""Switch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // WorldCharacter
        m_WorldCharacter = asset.FindActionMap("WorldCharacter", throwIfNotFound: true);
        m_WorldCharacter_CharacterMove = m_WorldCharacter.FindAction("CharacterMove", throwIfNotFound: true);
        m_WorldCharacter_CameraZoom = m_WorldCharacter.FindAction("CameraZoom", throwIfNotFound: true);
        m_WorldCharacter_Interaction = m_WorldCharacter.FindAction("Interaction", throwIfNotFound: true);
        m_WorldCharacter_Back = m_WorldCharacter.FindAction("Back", throwIfNotFound: true);
        m_WorldCharacter_CharacterRun = m_WorldCharacter.FindAction("CharacterRun", throwIfNotFound: true);
        // PizzaRoll
        m_PizzaRoll = asset.FindActionMap("PizzaRoll", throwIfNotFound: true);
        m_PizzaRoll_MoveReticle = m_PizzaRoll.FindAction("MoveReticle", throwIfNotFound: true);
        m_PizzaRoll_LaunchBall = m_PizzaRoll.FindAction("LaunchBall", throwIfNotFound: true);
        m_PizzaRoll_Pointer = m_PizzaRoll.FindAction("Pointer", throwIfNotFound: true);
        m_PizzaRoll_HoldBall = m_PizzaRoll.FindAction("HoldBall", throwIfNotFound: true);
        m_PizzaRoll_Interact = m_PizzaRoll.FindAction("Interact", throwIfNotFound: true);
        m_PizzaRoll_Back = m_PizzaRoll.FindAction("Back", throwIfNotFound: true);
        // Titlescreen
        m_Titlescreen = asset.FindActionMap("Titlescreen", throwIfNotFound: true);
        m_Titlescreen_Start = m_Titlescreen.FindAction("Start", throwIfNotFound: true);
        // Connect4Hoops
        m_Connect4Hoops = asset.FindActionMap("Connect4Hoops", throwIfNotFound: true);
        m_Connect4Hoops_Press = m_Connect4Hoops.FindAction("Press", throwIfNotFound: true);
        // HotShot
        m_HotShot = asset.FindActionMap("HotShot", throwIfNotFound: true);
        m_HotShot_Press = m_HotShot.FindAction("Press", throwIfNotFound: true);
        m_HotShot_Back = m_HotShot.FindAction("Back", throwIfNotFound: true);
        m_HotShot_Interact = m_HotShot.FindAction("Interact", throwIfNotFound: true);
        m_HotShot_DebugConsole = m_HotShot.FindAction("DebugConsole", throwIfNotFound: true);
        m_HotShot_Return = m_HotShot.FindAction("Return", throwIfNotFound: true);
        m_HotShot_Right = m_HotShot.FindAction("Right", throwIfNotFound: true);
        m_HotShot_Left = m_HotShot.FindAction("Left", throwIfNotFound: true);
        m_HotShot_Select = m_HotShot.FindAction("Select", throwIfNotFound: true);
        // WillyCrash
        m_WillyCrash = asset.FindActionMap("WillyCrash", throwIfNotFound: true);
        m_WillyCrash_Press = m_WillyCrash.FindAction("Press", throwIfNotFound: true);
        m_WillyCrash_Back = m_WillyCrash.FindAction("Back", throwIfNotFound: true);
        m_WillyCrash_Interact = m_WillyCrash.FindAction("Interact", throwIfNotFound: true);
        m_WillyCrash_DebugConsole = m_WillyCrash.FindAction("DebugConsole", throwIfNotFound: true);
        m_WillyCrash_Return = m_WillyCrash.FindAction("Return", throwIfNotFound: true);
        m_WillyCrash_Launch = m_WillyCrash.FindAction("Launch", throwIfNotFound: true);
        // PianoKeys
        m_PianoKeys = asset.FindActionMap("PianoKeys", throwIfNotFound: true);
        m_PianoKeys_Press = m_PianoKeys.FindAction("Press", throwIfNotFound: true);
        m_PianoKeys_Return = m_PianoKeys.FindAction("Return", throwIfNotFound: true);
        m_PianoKeys_DebugConsole = m_PianoKeys.FindAction("DebugConsole", throwIfNotFound: true);
        m_PianoKeys_Interact = m_PianoKeys.FindAction("Interact", throwIfNotFound: true);
        m_PianoKeys_Back = m_PianoKeys.FindAction("Back", throwIfNotFound: true);
        m_PianoKeys_TileA = m_PianoKeys.FindAction("TileA", throwIfNotFound: true);
        m_PianoKeys_TileB = m_PianoKeys.FindAction("TileB", throwIfNotFound: true);
        m_PianoKeys_TileC = m_PianoKeys.FindAction("TileC", throwIfNotFound: true);
        m_PianoKeys_TileD = m_PianoKeys.FindAction("TileD", throwIfNotFound: true);
        // FullTilt
        m_FullTilt = asset.FindActionMap("FullTilt", throwIfNotFound: true);
        m_FullTilt_Press = m_FullTilt.FindAction("Press", throwIfNotFound: true);
        m_FullTilt_DebugConsole = m_FullTilt.FindAction("DebugConsole", throwIfNotFound: true);
        m_FullTilt_Return = m_FullTilt.FindAction("Return", throwIfNotFound: true);
        m_FullTilt_Interact = m_FullTilt.FindAction("Interact", throwIfNotFound: true);
        m_FullTilt_Back = m_FullTilt.FindAction("Back", throwIfNotFound: true);
        m_FullTilt_KeyboardWheel = m_FullTilt.FindAction("KeyboardWheel", throwIfNotFound: true);
        m_FullTilt_ReleaseBallKey = m_FullTilt.FindAction("ReleaseBallKey", throwIfNotFound: true);
        // QuickDrop
        m_QuickDrop = asset.FindActionMap("QuickDrop", throwIfNotFound: true);
        m_QuickDrop_BallDrop = m_QuickDrop.FindAction("BallDrop", throwIfNotFound: true);
        m_QuickDrop_Press = m_QuickDrop.FindAction("Press", throwIfNotFound: true);
        m_QuickDrop_Back = m_QuickDrop.FindAction("Back", throwIfNotFound: true);
        m_QuickDrop_Interact = m_QuickDrop.FindAction("Interact", throwIfNotFound: true);
        m_QuickDrop_DebugConsole = m_QuickDrop.FindAction("DebugConsole", throwIfNotFound: true);
        // Squiggle
        m_Squiggle = asset.FindActionMap("Squiggle", throwIfNotFound: true);
        m_Squiggle_Back = m_Squiggle.FindAction("Back", throwIfNotFound: true);
        m_Squiggle_HoldBall = m_Squiggle.FindAction("HoldBall", throwIfNotFound: true);
        m_Squiggle_Interact = m_Squiggle.FindAction("Interact", throwIfNotFound: true);
        m_Squiggle_DebugConsole = m_Squiggle.FindAction("DebugConsole", throwIfNotFound: true);
        m_Squiggle_Return = m_Squiggle.FindAction("Return", throwIfNotFound: true);
        m_Squiggle_Press = m_Squiggle.FindAction("Press", throwIfNotFound: true);
        m_Squiggle_ActionButton = m_Squiggle.FindAction("ActionButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // WorldCharacter
    private readonly InputActionMap m_WorldCharacter;
    private IWorldCharacterActions m_WorldCharacterActionsCallbackInterface;
    private readonly InputAction m_WorldCharacter_CharacterMove;
    private readonly InputAction m_WorldCharacter_CameraZoom;
    private readonly InputAction m_WorldCharacter_Interaction;
    private readonly InputAction m_WorldCharacter_Back;
    private readonly InputAction m_WorldCharacter_CharacterRun;
    public struct WorldCharacterActions
    {
        private @GameControls m_Wrapper;
        public WorldCharacterActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CharacterMove => m_Wrapper.m_WorldCharacter_CharacterMove;
        public InputAction @CameraZoom => m_Wrapper.m_WorldCharacter_CameraZoom;
        public InputAction @Interaction => m_Wrapper.m_WorldCharacter_Interaction;
        public InputAction @Back => m_Wrapper.m_WorldCharacter_Back;
        public InputAction @CharacterRun => m_Wrapper.m_WorldCharacter_CharacterRun;
        public InputActionMap Get() { return m_Wrapper.m_WorldCharacter; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WorldCharacterActions set) { return set.Get(); }
        public void SetCallbacks(IWorldCharacterActions instance)
        {
            if (m_Wrapper.m_WorldCharacterActionsCallbackInterface != null)
            {
                @CharacterMove.started -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCharacterMove;
                @CharacterMove.performed -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCharacterMove;
                @CharacterMove.canceled -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCharacterMove;
                @CameraZoom.started -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.performed -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.canceled -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCameraZoom;
                @Interaction.started -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnInteraction;
                @Back.started -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnBack;
                @CharacterRun.started -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCharacterRun;
                @CharacterRun.performed -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCharacterRun;
                @CharacterRun.canceled -= m_Wrapper.m_WorldCharacterActionsCallbackInterface.OnCharacterRun;
            }
            m_Wrapper.m_WorldCharacterActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CharacterMove.started += instance.OnCharacterMove;
                @CharacterMove.performed += instance.OnCharacterMove;
                @CharacterMove.canceled += instance.OnCharacterMove;
                @CameraZoom.started += instance.OnCameraZoom;
                @CameraZoom.performed += instance.OnCameraZoom;
                @CameraZoom.canceled += instance.OnCameraZoom;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @CharacterRun.started += instance.OnCharacterRun;
                @CharacterRun.performed += instance.OnCharacterRun;
                @CharacterRun.canceled += instance.OnCharacterRun;
            }
        }
    }
    public WorldCharacterActions @WorldCharacter => new WorldCharacterActions(this);

    // PizzaRoll
    private readonly InputActionMap m_PizzaRoll;
    private IPizzaRollActions m_PizzaRollActionsCallbackInterface;
    private readonly InputAction m_PizzaRoll_MoveReticle;
    private readonly InputAction m_PizzaRoll_LaunchBall;
    private readonly InputAction m_PizzaRoll_Pointer;
    private readonly InputAction m_PizzaRoll_HoldBall;
    private readonly InputAction m_PizzaRoll_Interact;
    private readonly InputAction m_PizzaRoll_Back;
    public struct PizzaRollActions
    {
        private @GameControls m_Wrapper;
        public PizzaRollActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveReticle => m_Wrapper.m_PizzaRoll_MoveReticle;
        public InputAction @LaunchBall => m_Wrapper.m_PizzaRoll_LaunchBall;
        public InputAction @Pointer => m_Wrapper.m_PizzaRoll_Pointer;
        public InputAction @HoldBall => m_Wrapper.m_PizzaRoll_HoldBall;
        public InputAction @Interact => m_Wrapper.m_PizzaRoll_Interact;
        public InputAction @Back => m_Wrapper.m_PizzaRoll_Back;
        public InputActionMap Get() { return m_Wrapper.m_PizzaRoll; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PizzaRollActions set) { return set.Get(); }
        public void SetCallbacks(IPizzaRollActions instance)
        {
            if (m_Wrapper.m_PizzaRollActionsCallbackInterface != null)
            {
                @MoveReticle.started -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnMoveReticle;
                @MoveReticle.performed -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnMoveReticle;
                @MoveReticle.canceled -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnMoveReticle;
                @LaunchBall.started -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnLaunchBall;
                @LaunchBall.performed -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnLaunchBall;
                @LaunchBall.canceled -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnLaunchBall;
                @Pointer.started -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnPointer;
                @Pointer.performed -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnPointer;
                @Pointer.canceled -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnPointer;
                @HoldBall.started -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnHoldBall;
                @HoldBall.performed -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnHoldBall;
                @HoldBall.canceled -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnHoldBall;
                @Interact.started -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnInteract;
                @Back.started -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_PizzaRollActionsCallbackInterface.OnBack;
            }
            m_Wrapper.m_PizzaRollActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveReticle.started += instance.OnMoveReticle;
                @MoveReticle.performed += instance.OnMoveReticle;
                @MoveReticle.canceled += instance.OnMoveReticle;
                @LaunchBall.started += instance.OnLaunchBall;
                @LaunchBall.performed += instance.OnLaunchBall;
                @LaunchBall.canceled += instance.OnLaunchBall;
                @Pointer.started += instance.OnPointer;
                @Pointer.performed += instance.OnPointer;
                @Pointer.canceled += instance.OnPointer;
                @HoldBall.started += instance.OnHoldBall;
                @HoldBall.performed += instance.OnHoldBall;
                @HoldBall.canceled += instance.OnHoldBall;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
            }
        }
    }
    public PizzaRollActions @PizzaRoll => new PizzaRollActions(this);

    // Titlescreen
    private readonly InputActionMap m_Titlescreen;
    private ITitlescreenActions m_TitlescreenActionsCallbackInterface;
    private readonly InputAction m_Titlescreen_Start;
    public struct TitlescreenActions
    {
        private @GameControls m_Wrapper;
        public TitlescreenActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Start => m_Wrapper.m_Titlescreen_Start;
        public InputActionMap Get() { return m_Wrapper.m_Titlescreen; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TitlescreenActions set) { return set.Get(); }
        public void SetCallbacks(ITitlescreenActions instance)
        {
            if (m_Wrapper.m_TitlescreenActionsCallbackInterface != null)
            {
                @Start.started -= m_Wrapper.m_TitlescreenActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_TitlescreenActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_TitlescreenActionsCallbackInterface.OnStart;
            }
            m_Wrapper.m_TitlescreenActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
            }
        }
    }
    public TitlescreenActions @Titlescreen => new TitlescreenActions(this);

    // Connect4Hoops
    private readonly InputActionMap m_Connect4Hoops;
    private IConnect4HoopsActions m_Connect4HoopsActionsCallbackInterface;
    private readonly InputAction m_Connect4Hoops_Press;
    public struct Connect4HoopsActions
    {
        private @GameControls m_Wrapper;
        public Connect4HoopsActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Press => m_Wrapper.m_Connect4Hoops_Press;
        public InputActionMap Get() { return m_Wrapper.m_Connect4Hoops; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Connect4HoopsActions set) { return set.Get(); }
        public void SetCallbacks(IConnect4HoopsActions instance)
        {
            if (m_Wrapper.m_Connect4HoopsActionsCallbackInterface != null)
            {
                @Press.started -= m_Wrapper.m_Connect4HoopsActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_Connect4HoopsActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_Connect4HoopsActionsCallbackInterface.OnPress;
            }
            m_Wrapper.m_Connect4HoopsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
            }
        }
    }
    public Connect4HoopsActions @Connect4Hoops => new Connect4HoopsActions(this);

    // HotShot
    private readonly InputActionMap m_HotShot;
    private IHotShotActions m_HotShotActionsCallbackInterface;
    private readonly InputAction m_HotShot_Press;
    private readonly InputAction m_HotShot_Back;
    private readonly InputAction m_HotShot_Interact;
    private readonly InputAction m_HotShot_DebugConsole;
    private readonly InputAction m_HotShot_Return;
    private readonly InputAction m_HotShot_Right;
    private readonly InputAction m_HotShot_Left;
    private readonly InputAction m_HotShot_Select;
    public struct HotShotActions
    {
        private @GameControls m_Wrapper;
        public HotShotActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Press => m_Wrapper.m_HotShot_Press;
        public InputAction @Back => m_Wrapper.m_HotShot_Back;
        public InputAction @Interact => m_Wrapper.m_HotShot_Interact;
        public InputAction @DebugConsole => m_Wrapper.m_HotShot_DebugConsole;
        public InputAction @Return => m_Wrapper.m_HotShot_Return;
        public InputAction @Right => m_Wrapper.m_HotShot_Right;
        public InputAction @Left => m_Wrapper.m_HotShot_Left;
        public InputAction @Select => m_Wrapper.m_HotShot_Select;
        public InputActionMap Get() { return m_Wrapper.m_HotShot; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HotShotActions set) { return set.Get(); }
        public void SetCallbacks(IHotShotActions instance)
        {
            if (m_Wrapper.m_HotShotActionsCallbackInterface != null)
            {
                @Press.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnPress;
                @Back.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnBack;
                @Interact.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnInteract;
                @DebugConsole.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnDebugConsole;
                @Return.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnReturn;
                @Right.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnRight;
                @Left.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnLeft;
                @Select.started -= m_Wrapper.m_HotShotActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_HotShotActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_HotShotActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_HotShotActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @DebugConsole.started += instance.OnDebugConsole;
                @DebugConsole.performed += instance.OnDebugConsole;
                @DebugConsole.canceled += instance.OnDebugConsole;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public HotShotActions @HotShot => new HotShotActions(this);

    // WillyCrash
    private readonly InputActionMap m_WillyCrash;
    private IWillyCrashActions m_WillyCrashActionsCallbackInterface;
    private readonly InputAction m_WillyCrash_Press;
    private readonly InputAction m_WillyCrash_Back;
    private readonly InputAction m_WillyCrash_Interact;
    private readonly InputAction m_WillyCrash_DebugConsole;
    private readonly InputAction m_WillyCrash_Return;
    private readonly InputAction m_WillyCrash_Launch;
    public struct WillyCrashActions
    {
        private @GameControls m_Wrapper;
        public WillyCrashActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Press => m_Wrapper.m_WillyCrash_Press;
        public InputAction @Back => m_Wrapper.m_WillyCrash_Back;
        public InputAction @Interact => m_Wrapper.m_WillyCrash_Interact;
        public InputAction @DebugConsole => m_Wrapper.m_WillyCrash_DebugConsole;
        public InputAction @Return => m_Wrapper.m_WillyCrash_Return;
        public InputAction @Launch => m_Wrapper.m_WillyCrash_Launch;
        public InputActionMap Get() { return m_Wrapper.m_WillyCrash; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WillyCrashActions set) { return set.Get(); }
        public void SetCallbacks(IWillyCrashActions instance)
        {
            if (m_Wrapper.m_WillyCrashActionsCallbackInterface != null)
            {
                @Press.started -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnPress;
                @Back.started -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnBack;
                @Interact.started -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnInteract;
                @DebugConsole.started -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.performed -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.canceled -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnDebugConsole;
                @Return.started -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnReturn;
                @Launch.started -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnLaunch;
                @Launch.performed -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnLaunch;
                @Launch.canceled -= m_Wrapper.m_WillyCrashActionsCallbackInterface.OnLaunch;
            }
            m_Wrapper.m_WillyCrashActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @DebugConsole.started += instance.OnDebugConsole;
                @DebugConsole.performed += instance.OnDebugConsole;
                @DebugConsole.canceled += instance.OnDebugConsole;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @Launch.started += instance.OnLaunch;
                @Launch.performed += instance.OnLaunch;
                @Launch.canceled += instance.OnLaunch;
            }
        }
    }
    public WillyCrashActions @WillyCrash => new WillyCrashActions(this);

    // PianoKeys
    private readonly InputActionMap m_PianoKeys;
    private IPianoKeysActions m_PianoKeysActionsCallbackInterface;
    private readonly InputAction m_PianoKeys_Press;
    private readonly InputAction m_PianoKeys_Return;
    private readonly InputAction m_PianoKeys_DebugConsole;
    private readonly InputAction m_PianoKeys_Interact;
    private readonly InputAction m_PianoKeys_Back;
    private readonly InputAction m_PianoKeys_TileA;
    private readonly InputAction m_PianoKeys_TileB;
    private readonly InputAction m_PianoKeys_TileC;
    private readonly InputAction m_PianoKeys_TileD;
    public struct PianoKeysActions
    {
        private @GameControls m_Wrapper;
        public PianoKeysActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Press => m_Wrapper.m_PianoKeys_Press;
        public InputAction @Return => m_Wrapper.m_PianoKeys_Return;
        public InputAction @DebugConsole => m_Wrapper.m_PianoKeys_DebugConsole;
        public InputAction @Interact => m_Wrapper.m_PianoKeys_Interact;
        public InputAction @Back => m_Wrapper.m_PianoKeys_Back;
        public InputAction @TileA => m_Wrapper.m_PianoKeys_TileA;
        public InputAction @TileB => m_Wrapper.m_PianoKeys_TileB;
        public InputAction @TileC => m_Wrapper.m_PianoKeys_TileC;
        public InputAction @TileD => m_Wrapper.m_PianoKeys_TileD;
        public InputActionMap Get() { return m_Wrapper.m_PianoKeys; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PianoKeysActions set) { return set.Get(); }
        public void SetCallbacks(IPianoKeysActions instance)
        {
            if (m_Wrapper.m_PianoKeysActionsCallbackInterface != null)
            {
                @Press.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnPress;
                @Return.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnReturn;
                @DebugConsole.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnDebugConsole;
                @Interact.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnInteract;
                @Back.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnBack;
                @TileA.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileA;
                @TileA.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileA;
                @TileA.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileA;
                @TileB.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileB;
                @TileB.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileB;
                @TileB.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileB;
                @TileC.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileC;
                @TileC.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileC;
                @TileC.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileC;
                @TileD.started -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileD;
                @TileD.performed -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileD;
                @TileD.canceled -= m_Wrapper.m_PianoKeysActionsCallbackInterface.OnTileD;
            }
            m_Wrapper.m_PianoKeysActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @DebugConsole.started += instance.OnDebugConsole;
                @DebugConsole.performed += instance.OnDebugConsole;
                @DebugConsole.canceled += instance.OnDebugConsole;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @TileA.started += instance.OnTileA;
                @TileA.performed += instance.OnTileA;
                @TileA.canceled += instance.OnTileA;
                @TileB.started += instance.OnTileB;
                @TileB.performed += instance.OnTileB;
                @TileB.canceled += instance.OnTileB;
                @TileC.started += instance.OnTileC;
                @TileC.performed += instance.OnTileC;
                @TileC.canceled += instance.OnTileC;
                @TileD.started += instance.OnTileD;
                @TileD.performed += instance.OnTileD;
                @TileD.canceled += instance.OnTileD;
            }
        }
    }
    public PianoKeysActions @PianoKeys => new PianoKeysActions(this);

    // FullTilt
    private readonly InputActionMap m_FullTilt;
    private IFullTiltActions m_FullTiltActionsCallbackInterface;
    private readonly InputAction m_FullTilt_Press;
    private readonly InputAction m_FullTilt_DebugConsole;
    private readonly InputAction m_FullTilt_Return;
    private readonly InputAction m_FullTilt_Interact;
    private readonly InputAction m_FullTilt_Back;
    private readonly InputAction m_FullTilt_KeyboardWheel;
    private readonly InputAction m_FullTilt_ReleaseBallKey;
    public struct FullTiltActions
    {
        private @GameControls m_Wrapper;
        public FullTiltActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Press => m_Wrapper.m_FullTilt_Press;
        public InputAction @DebugConsole => m_Wrapper.m_FullTilt_DebugConsole;
        public InputAction @Return => m_Wrapper.m_FullTilt_Return;
        public InputAction @Interact => m_Wrapper.m_FullTilt_Interact;
        public InputAction @Back => m_Wrapper.m_FullTilt_Back;
        public InputAction @KeyboardWheel => m_Wrapper.m_FullTilt_KeyboardWheel;
        public InputAction @ReleaseBallKey => m_Wrapper.m_FullTilt_ReleaseBallKey;
        public InputActionMap Get() { return m_Wrapper.m_FullTilt; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FullTiltActions set) { return set.Get(); }
        public void SetCallbacks(IFullTiltActions instance)
        {
            if (m_Wrapper.m_FullTiltActionsCallbackInterface != null)
            {
                @Press.started -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnPress;
                @DebugConsole.started -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.performed -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.canceled -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnDebugConsole;
                @Return.started -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnReturn;
                @Interact.started -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnInteract;
                @Back.started -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnBack;
                @KeyboardWheel.started -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnKeyboardWheel;
                @KeyboardWheel.performed -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnKeyboardWheel;
                @KeyboardWheel.canceled -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnKeyboardWheel;
                @ReleaseBallKey.started -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnReleaseBallKey;
                @ReleaseBallKey.performed -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnReleaseBallKey;
                @ReleaseBallKey.canceled -= m_Wrapper.m_FullTiltActionsCallbackInterface.OnReleaseBallKey;
            }
            m_Wrapper.m_FullTiltActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
                @DebugConsole.started += instance.OnDebugConsole;
                @DebugConsole.performed += instance.OnDebugConsole;
                @DebugConsole.canceled += instance.OnDebugConsole;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @KeyboardWheel.started += instance.OnKeyboardWheel;
                @KeyboardWheel.performed += instance.OnKeyboardWheel;
                @KeyboardWheel.canceled += instance.OnKeyboardWheel;
                @ReleaseBallKey.started += instance.OnReleaseBallKey;
                @ReleaseBallKey.performed += instance.OnReleaseBallKey;
                @ReleaseBallKey.canceled += instance.OnReleaseBallKey;
            }
        }
    }
    public FullTiltActions @FullTilt => new FullTiltActions(this);

    // QuickDrop
    private readonly InputActionMap m_QuickDrop;
    private IQuickDropActions m_QuickDropActionsCallbackInterface;
    private readonly InputAction m_QuickDrop_BallDrop;
    private readonly InputAction m_QuickDrop_Press;
    private readonly InputAction m_QuickDrop_Back;
    private readonly InputAction m_QuickDrop_Interact;
    private readonly InputAction m_QuickDrop_DebugConsole;
    public struct QuickDropActions
    {
        private @GameControls m_Wrapper;
        public QuickDropActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @BallDrop => m_Wrapper.m_QuickDrop_BallDrop;
        public InputAction @Press => m_Wrapper.m_QuickDrop_Press;
        public InputAction @Back => m_Wrapper.m_QuickDrop_Back;
        public InputAction @Interact => m_Wrapper.m_QuickDrop_Interact;
        public InputAction @DebugConsole => m_Wrapper.m_QuickDrop_DebugConsole;
        public InputActionMap Get() { return m_Wrapper.m_QuickDrop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuickDropActions set) { return set.Get(); }
        public void SetCallbacks(IQuickDropActions instance)
        {
            if (m_Wrapper.m_QuickDropActionsCallbackInterface != null)
            {
                @BallDrop.started -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnBallDrop;
                @BallDrop.performed -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnBallDrop;
                @BallDrop.canceled -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnBallDrop;
                @Press.started -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnPress;
                @Back.started -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnBack;
                @Interact.started -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnInteract;
                @DebugConsole.started -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.performed -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.canceled -= m_Wrapper.m_QuickDropActionsCallbackInterface.OnDebugConsole;
            }
            m_Wrapper.m_QuickDropActionsCallbackInterface = instance;
            if (instance != null)
            {
                @BallDrop.started += instance.OnBallDrop;
                @BallDrop.performed += instance.OnBallDrop;
                @BallDrop.canceled += instance.OnBallDrop;
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @DebugConsole.started += instance.OnDebugConsole;
                @DebugConsole.performed += instance.OnDebugConsole;
                @DebugConsole.canceled += instance.OnDebugConsole;
            }
        }
    }
    public QuickDropActions @QuickDrop => new QuickDropActions(this);

    // Squiggle
    private readonly InputActionMap m_Squiggle;
    private ISquiggleActions m_SquiggleActionsCallbackInterface;
    private readonly InputAction m_Squiggle_Back;
    private readonly InputAction m_Squiggle_HoldBall;
    private readonly InputAction m_Squiggle_Interact;
    private readonly InputAction m_Squiggle_DebugConsole;
    private readonly InputAction m_Squiggle_Return;
    private readonly InputAction m_Squiggle_Press;
    private readonly InputAction m_Squiggle_ActionButton;
    public struct SquiggleActions
    {
        private @GameControls m_Wrapper;
        public SquiggleActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Back => m_Wrapper.m_Squiggle_Back;
        public InputAction @HoldBall => m_Wrapper.m_Squiggle_HoldBall;
        public InputAction @Interact => m_Wrapper.m_Squiggle_Interact;
        public InputAction @DebugConsole => m_Wrapper.m_Squiggle_DebugConsole;
        public InputAction @Return => m_Wrapper.m_Squiggle_Return;
        public InputAction @Press => m_Wrapper.m_Squiggle_Press;
        public InputAction @ActionButton => m_Wrapper.m_Squiggle_ActionButton;
        public InputActionMap Get() { return m_Wrapper.m_Squiggle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SquiggleActions set) { return set.Get(); }
        public void SetCallbacks(ISquiggleActions instance)
        {
            if (m_Wrapper.m_SquiggleActionsCallbackInterface != null)
            {
                @Back.started -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnBack;
                @HoldBall.started -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnHoldBall;
                @HoldBall.performed -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnHoldBall;
                @HoldBall.canceled -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnHoldBall;
                @Interact.started -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnInteract;
                @DebugConsole.started -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.performed -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnDebugConsole;
                @DebugConsole.canceled -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnDebugConsole;
                @Return.started -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnReturn;
                @Press.started -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnPress;
                @ActionButton.started -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnActionButton;
                @ActionButton.performed -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnActionButton;
                @ActionButton.canceled -= m_Wrapper.m_SquiggleActionsCallbackInterface.OnActionButton;
            }
            m_Wrapper.m_SquiggleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @HoldBall.started += instance.OnHoldBall;
                @HoldBall.performed += instance.OnHoldBall;
                @HoldBall.canceled += instance.OnHoldBall;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @DebugConsole.started += instance.OnDebugConsole;
                @DebugConsole.performed += instance.OnDebugConsole;
                @DebugConsole.canceled += instance.OnDebugConsole;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
                @ActionButton.started += instance.OnActionButton;
                @ActionButton.performed += instance.OnActionButton;
                @ActionButton.canceled += instance.OnActionButton;
            }
        }
    }
    public SquiggleActions @Squiggle => new SquiggleActions(this);
    private int m_SwitchSchemeIndex = -1;
    public InputControlScheme SwitchScheme
    {
        get
        {
            if (m_SwitchSchemeIndex == -1) m_SwitchSchemeIndex = asset.FindControlSchemeIndex("Switch");
            return asset.controlSchemes[m_SwitchSchemeIndex];
        }
    }
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface IWorldCharacterActions
    {
        void OnCharacterMove(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnCharacterRun(InputAction.CallbackContext context);
    }
    public interface IPizzaRollActions
    {
        void OnMoveReticle(InputAction.CallbackContext context);
        void OnLaunchBall(InputAction.CallbackContext context);
        void OnPointer(InputAction.CallbackContext context);
        void OnHoldBall(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
    public interface ITitlescreenActions
    {
        void OnStart(InputAction.CallbackContext context);
    }
    public interface IConnect4HoopsActions
    {
        void OnPress(InputAction.CallbackContext context);
    }
    public interface IHotShotActions
    {
        void OnPress(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDebugConsole(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
    public interface IWillyCrashActions
    {
        void OnPress(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDebugConsole(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnLaunch(InputAction.CallbackContext context);
    }
    public interface IPianoKeysActions
    {
        void OnPress(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnDebugConsole(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnTileA(InputAction.CallbackContext context);
        void OnTileB(InputAction.CallbackContext context);
        void OnTileC(InputAction.CallbackContext context);
        void OnTileD(InputAction.CallbackContext context);
    }
    public interface IFullTiltActions
    {
        void OnPress(InputAction.CallbackContext context);
        void OnDebugConsole(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnKeyboardWheel(InputAction.CallbackContext context);
        void OnReleaseBallKey(InputAction.CallbackContext context);
    }
    public interface IQuickDropActions
    {
        void OnBallDrop(InputAction.CallbackContext context);
        void OnPress(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDebugConsole(InputAction.CallbackContext context);
    }
    public interface ISquiggleActions
    {
        void OnBack(InputAction.CallbackContext context);
        void OnHoldBall(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDebugConsole(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnPress(InputAction.CallbackContext context);
        void OnActionButton(InputAction.CallbackContext context);
    }
}
